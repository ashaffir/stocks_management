upstream kadima_project_server {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).
  server unix:/home/alf_naboo_id/stocks_management/venv_stocks/run/gunicorn.sock fail_timeout=0;
}

server {
    server_name swingabit.com www.swingabit.com;

    client_max_body_size 4G;
    access_log /home/alf_naboo_id/logs/nginx-kadima-access.log;
    error_log /home/alf_naboo_id/logs/nginx-kadima-error.log;

    location /static/ {
        alias   /home/alf_naboo_id/stocks_management/static/;
    }

    location /media/ {
        alias   /home/alf_naboo_id/stocks_management/media/;
    }

    location / {

        # an HTTP header important enough to have its own Wikipedia entry:
        #   http://en.wikipedia.org/wiki/X-Forwarded-For
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;


        # enable this if and only if you use HTTPS, this helps Rack
        # set the proper protocol for doing redirects:
        # proxy_set_header X-Forwarded-Proto https;

        # pass the Host: header from the client right along so redirects
        # can be set properly within the Rack application
        proxy_set_header Host $http_host;

        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;

        # set "proxy_buffering off" *only* for Rainbows! when doing
        # Comet/long-poll stuff.  It's also safe to set if you're
        # using only serving fast clients with Unicorn + nginx.
        # Otherwise you _want_ nginx to buffer responses to slow
        # clients, really.
        # proxy_buffering off;

        # Try to serve static files from nginx, no point in making an
        # *application* server like Unicorn/Rainbows! serve static files.
        if (!-f $request_filename) {
            proxy_pass http://kadima_project_server;
            break;
        }
    }

    # Error pages
    error_page 500 502 503 504 /500.html;
    location = /500.html {
        root /home/alf_naboo_id/stocks_management/static/;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/sportzmatics.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/sportzmatics.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot



}


server {
    if ($host = swingabit.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot



    listen   80;
    server_name swingabit.com;
    return 404; # managed by Certbot


}
